openapi: 3.0.0
info:
  title: CDS Hooks REST API
  version: '1.1'
paths:
  /cds-services:
    get:
      description: Get a description of all CDS services offered by this CDS Provider
      operationId: cdsServicesGet
      responses:
        '200':
          description: List of CDS services available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdsServiceInformation'
          links:
            PostToCdsService: 
              operationId: cdsServicePost
              parameters:
                serviceId: '$response.body#/services/0/id'
              description: >
                The `id` values returned in the response entries can be used as
                the `serviceId` parameter in `POST /cds-services/{serviceId}`
  /cds-services/{serviceId}:
    post:
      security: 
        - clientIssuedJwt: []
      description: Invoke a CDS service offered by this CDS Provider
      operationId: cdsServicePost
      parameters:
        - name: serviceId
          in: path
          description: The id of this CDS service
          example: CmsDrugPricing
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CdsRequest'
      responses:
        '200':
          description: Success (includes CDS Cards)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '412':
          $ref: '#/components/responses/InsufficientContext'
      
servers:
  - url: '{scheme}://{host}{path}'
    variables:
      scheme:
        default: https
        enum:
          - https
        description: The transfer protocol used by the server
      host:
        default: cds-service-example.herokuapp.com
        description: The domain/host name of the server
      path:
        default: /
        description: The base path of the CDS service
    description: The base URL of the CDS service
components:
  schemas:
    CdsServiceInformation:
      type: object
      properties:
        services: 
          description: An array of **CDS Services**
          type: array
          items:
             $ref: '#/components/schemas/CdsService'
    
    CdsService:
      type: object
      required:
        - id
        - hook
        - description
      properties:
        id:
          type: string
          description: The {id} portion of the URL to this service which is available at `{baseUrl}/cds-services/{id}`
          example: static-patient-greeter
        hook:
          description: The hook this service should be invoked on. See [Hooks](https://cds-hooks.org/specification/current/#hooks).
          allOf:
            - $ref: '#/components/schemas/Hook'
        title:
          type: string
          description: The human-friendly name of this service.
          example: Static CDS Service Example
        description:
          type: string
          description: The description of this service.
          example: An example of a CDS Service that returns a static set of cards
        prefetch:
          $ref: '#/components/schemas/PrefetchTemplate'
    
    PrefetchTemplate:
      type: object
      additionalProperties:
        type: string
      description: An object containing key/value pairs of FHIR queries that this service is requesting that the CDS Client prefetch and provide on each service call. The key is a *string* that describes the type of data being requested and the value is a *string* representing the FHIR query. See [Prefetch Template](https://cds-hooks.org/specification/current/#prefetch-template).
      example:
          patientToGreet: "Patient/{{context.patientId}}"
          
    CdsRequest:
      type: object
      required:
        - hook
        - hookInstance
        - context
      properties:
        hook:
          description: The hook that triggered this CDS Service call. See [Hooks](https://cds-hooks.org/specification/current/#hooks).
          allOf:
            - $ref: '#/components/schemas/Hook'
        hookInstance:
          example: d1577c69-dfbe-44ad-ba6d-3e05e953b2ea
          type: string
          format: uuid
          description: 
            A universally unique identifier (UUID) for this particular hook call.
            While working in the CDS Client, a user can perform multiple actions in series or in parallel. For example, a clinician might prescribe two drugs in a row; each prescription action would be assigned a unique `hookInstance`. This allows a CDS Service to uniquely identify each hook invocation.
            Note":" the `hookInstance` is globally unique and should contain enough entropy to be un-guessable."

        fhirServer:
          $ref: '#/components/schemas/FhirServer'
        fhirAuthorization:
          $ref: '#/components/schemas/FhirAuthorization'
        context:
          description: 
            Hook-specific contextual data that the CDS service will need.
            For example, with the patient-view hook this will include the FHIR identifier of the [Patient](https://www.hl7.org/fhir/patient.html) being viewed. For details, see the Hooks specification page.
          anyOf:
            # - $ref: '#/components/schemas/PatientViewContext'
            - type: object
          example:
            userId: Practitioner/example
            patientId: "1288992"
            encounterId: "89284"
        prefetch:
          $ref: '#/components/schemas/PrefetchResponse'
        
    PrefetchResponse:
      type: object
      example:
        patient:
         resourceType: Patient
         gender: male
         birthDate: "1925-12-23"
         id: "1288992"
         active: true
          
      additionalProperties:
        type: object
      description: >
        The FHIR data that was prefetched by the CDS Client.
            
    Hook:
      type: string
      example: patient-view
    
    FhirServer:
      description: The base URL of the CDS Client's [FHIR](https://www.hl7.org/fhir/) server. If fhirAuthorization is provided, this field is REQUIRED. The scheme should be `https`
      type: string
      format: url
      example: http://hooks.smarthealthit.org:9080
    
    FhirAuthorization:
      type: object
      description: A structure holding an [OAuth 2.0](https://oauth.net/2/) bearer access token granting the CDS Service access to FHIR resources, along with supplemental information relating to the token. See the [FHIR Resource Access](https://cds-hooks.org/specification/current/#fhir-resource-access) section for more information.
      required:
        - access_token
        - token_type
        - expires_in
        - scope
        - subject
      properties:
        access_token:
          type: string
          example: some-opaque-fhir-access-token
          description: This is the OAuth 2.0 access token that provides access to the FHIR server.
        token_type:
          type: string
          enum:
            - Bearer
          description: Fixed value `Bearer`
        expires_in:
          type: integer
          example: 300
          description: The lifetime in seconds of the access token.
        scope:
          type: string
          example: patient/Patient.read patient/Observation.read
          description: 	The scopes the access token grants the CDS Service. The scopes granted to the CDS Service via the scope field are defined by the [SMART on FHIR specification](http://hl7.org/fhir/smart-app-launch/1.0.0/scopes-and-launch-context/).
        subject:
          type: string
          example: cds-service4
          description: The [OAuth 2.0](https://oauth.net/2/) client identifier of the CDS Service, as registered with the CDS Client's authorization server.
      
    CdsResponse:
      type: object
      required:
        - cards
      properties:
        cards:
          type: array
          items:
            $ref: '#/components/schemas/Card'
    Card:
      type: object
      required:
        - summary
        - indicator
        - source
      properties:
        summary:
          type: string
        detail:
          type: string
        indicator:
          type: string
          enum:
            - info
            - warning
            - critical
        source:
          $ref: '#/components/schemas/Source'
        suggestions:
          type: array
          items:
            $ref: '#/components/schemas/Suggestion'
        selectionBehavior:
          type: string
          enum:
            - at-most-one
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    Source:
      type: object
      required:
        - label
      properties:
        label:
          type: string
        url:
          type: string
          format: url
        icon:
          type: string
          format: url

    Link:
      type: object
      properties:
        label:
          type: string
        url:
          type: string
          format: url
        type:
          type: string
        appContext:
          type: string
    
    Suggestion:
      type: object
      required:
        - label
      properties:
        label:
          type: string
        uuid:
          type: string
          format: uuid
        actions:
          type: array
          items:
            $ref: '#/components/schemas/Action'
    
    Action:
      type: object
      required:
        - type
        - description
      properties:
        type:
          type: string
          enum:
            - create
            - update
            - delete
        description:
          type: string
        resource:
          type: object
  
    # PatientViewContext:
    #   type: object
    #   required:
    #     - userId
    #     - patientId
    #   example:
    #     userId: Pracitioner/1254677
    #     patientId: '1288992'
    #   properties:
    #     userId:
    #       type: string
    #     patientId:
    #       type: string
    #     encounterId:
    #       type: string
        
  responses:
    UnauthorizedError:
      description: CDS client failed to **[authenticate with the service](https://cds-hooks.hl7.org/1.0/#trusting-cds-clients)**
    InsufficientContext:
      description: >-
        The context, prefetch and/or fhirAuthorization provided was not sufficient for this service
  
  securitySchemes:
    clientIssuedJwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: >-
        See security recommendations for [trusting CDS Clients](https://cds-hooks.hl7.org/1.0/#trusting-cds-clients)

externalDocs:
  description: CDS Hooks specification
  url: 'https://cds-hooks.hl7.org/1.0'
